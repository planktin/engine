# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/ruby:2.5.1-node-browsers
      - image: circleci/ruby:2.5.1-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      # - image: circleci/mongo:3.4.18
      #   environment:


    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # START copied
      # - run:
      #     name: Setup Bundler and Gems
      #     command: |
      #       gem install bundler
      #       gem update bundler
      #       gem install brakeman
      #       gem install rubocop
      #       gem install rubocop-rspec
      #       bundle config without development:test
      #       bundle check --path=vendor/bundle || bundle install --without development test --path=vendor/bundle --jobs 4 --retry 3
      # END copied

      # - run:
      #   name: Install RSpec JUnit Formatter
      #   command: |
      #     gem install rspec_junit_formatter

      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            gem install rspec_junit_formatter

            bundle exec rspec \
              --format progress \
              --require rspec_junit_formatter \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      ### start
      # test:
      #   override:
      #     - RAILS_ENV=test bundle exec rspec -r rspec_junit_formatter --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml
      ### end

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
